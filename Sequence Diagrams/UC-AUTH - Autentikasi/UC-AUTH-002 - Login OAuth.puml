@startuml UC-AUTH-001 - Registrasi OAuth
skinparam wrapWidth 140

title Registrasi OAuth

actor ":User" as user
participant ":LoginUI" as view
participant ":AuthController" as controller
participant ":AuthService" as authService
participant ":UserService" as userService
participant "GoogleOAuthProvider:OAuthProvider" as oauth
database ":DBMS" as db

user -> view ++: Open login view
view -> view: showLoginView()

user -> view: Login using Google
view -> controller ++: loginOAuth()

controller -> authService ++: requestOAuth()

authService -> oauth ++: requestAuth(appId, callbackUrl)
oauth --> authService: oauthUrl

authService --> controller --: oauthUrl

controller --> view: oauthUrl

view -> view ++: openOAuthUrl(oauthUrl)
user -> view: Authenticate Google account
deactivate view

opt user's OAuth authenticated
  oauth -> controller: oauthCallback(url, oauthCode)
  controller --> oauth
  deactivate oauth

  controller -> authService ++: createUserFromOAuth(oauthCode)
    authService -> authService ++: createOAuthToken(oauthCode)
    authService -> oauth ++: getToken(oauthCode)
      oauth --> authService --: token
    authService -> db ++: insertToken()
      db --> authService --: transactionStatus
    authService --> authService --: token

    authService -> authService ++: getUserData(token)
      authService -> oauth ++: getCurrentUserProfile(token)
        oauth --> authService --: userProfileDTO

      authService -> userService ++: getUserById(userId)

      userService -> db ++: selectUser()
        db --> userService --: userModel
        userService --> authService --: userModel
      authService --> authService --: userModel

    authService --> controller --: userModel

  controller --> view --: userDTO, token

  view -> view: setUserSession(userDTO, token)
end
